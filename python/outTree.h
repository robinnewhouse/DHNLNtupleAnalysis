#ifndef NTAU__OUTTREE__H
#define NTAU__OUTTREE__H

/// Autogenerated code by NtupleBranchMgr on Wed Feb  8 16:24:01 2023


#include "NtupleAnalysisUtils/NTAUTopLevelIncludes.h"
#include <vector>
#include "TTree.h"

class outTree: public NtupleBranchMgr{
    public:
        outTree(TTree* t): NtupleBranchMgr(t){
            if(t) getMissedBranches(t);
        }
     /// List of branch members
        NtupleBranch <Int_t>                        runNumber{"runNumber",       m_tree, this};
        NtupleBranch <Long64_t>                     eventNumber{"eventNumber",     m_tree, this};
        NtupleBranch <Int_t>                        lumiBlock{"lumiBlock",       m_tree, this};
        NtupleBranch <UInt_t>                       coreFlags{"coreFlags",       m_tree, this};
        NtupleBranch <Int_t>                        bcid{"bcid",            m_tree, this};
        NtupleBranch <Int_t>                        mcEventNumber{"mcEventNumber",   m_tree, this};
        NtupleBranch <Int_t>                        mcChannelNumber{"mcChannelNumber", m_tree, this};
        NtupleBranch <Float_t>                      mcEventWeight{"mcEventWeight",   m_tree, this};
        NtupleBranch <Int_t>                        NPV{"NPV",             m_tree, this};
        NtupleBranch <Float_t>                      actualInteractionsPerCrossing{"actualInteractionsPerCrossing",m_tree, this};
        NtupleBranch <Float_t>                      averageInteractionsPerCrossing{"averageInteractionsPerCrossing",m_tree, this};
        NtupleBranch <Float_t>                      weight_pileup{"weight_pileup",   m_tree, this};
        NtupleBranch <Float_t>                      correctedAverageMu{"correctedAverageMu",m_tree, this};
        NtupleBranch <Float_t>                      correctedAndScaledAverageMu{"correctedAndScaledAverageMu",m_tree, this};
        NtupleBranch <Float_t>                      correctedActualMu{"correctedActualMu",m_tree, this};
        NtupleBranch <Float_t>                      correctedAndScaledActualMu{"correctedAndScaledActualMu",m_tree, this};
        NtupleBranch <Float_t>                      weight_pileup_up{"weight_pileup_up",m_tree, this};
        NtupleBranch <Float_t>                      weight_pileup_down{"weight_pileup_down",m_tree, this};
        NtupleBranch <Int_t>                        rand_run_nr{"rand_run_nr",     m_tree, this};
        NtupleBranch <Int_t>                        rand_lumiblock_nr{"rand_lumiblock_nr",m_tree, this};
        NtupleBranch <Float_t>                      mcBeamSpotWeight{"mcBeamSpotWeight",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_PV_x{"truth_PV_x",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_PV_y{"truth_PV_y",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_PV_z{"truth_PV_z",      m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        truth_W_found{"truth_W_found",   m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truth_W_Id{"truth_W_Id",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_W_pt{"truth_W_pt",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_W_eta{"truth_W_eta",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_W_phi{"truth_W_phi",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_W_m{"truth_W_m",       m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truth_N_Id{"truth_N_Id",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_pt{"truth_N_pt",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_eta{"truth_N_eta",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_phi{"truth_N_phi",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_m{"truth_N_m",       m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_beta{"truth_N_beta",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_gamma{"truth_N_gamma",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_decayvtx_R{"truth_N_decayvtx_R",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_decayvtx_x{"truth_N_decayvtx_x",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_decayvtx_y{"truth_N_decayvtx_y",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_decayvtx_z{"truth_N_decayvtx_z",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_lifetime_lab{"truth_N_lifetime_lab",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_N_lifetime_prop{"truth_N_lifetime_prop",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        truth_event_is_LNC{"truth_event_is_LNC",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        truth_event_is_LNV{"truth_event_is_LNV",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truth_prompt_lepton_Id{"truth_prompt_lepton_Id",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_prompt_lepton_pt{"truth_prompt_lepton_pt",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_prompt_lepton_eta{"truth_prompt_lepton_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_prompt_lepton_phi{"truth_prompt_lepton_phi",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_prompt_lepton_m{"truth_prompt_lepton_m",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truth_displaced_lepton1_Id{"truth_displaced_lepton1_Id",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_displaced_lepton1_pt{"truth_displaced_lepton1_pt",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_displaced_lepton1_eta{"truth_displaced_lepton1_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_displaced_lepton1_phi{"truth_displaced_lepton1_phi",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_displaced_lepton1_m{"truth_displaced_lepton1_m",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truth_displaced_lepton2_Id{"truth_displaced_lepton2_Id",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_displaced_lepton2_pt{"truth_displaced_lepton2_pt",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_displaced_lepton2_eta{"truth_displaced_lepton2_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_displaced_lepton2_phi{"truth_displaced_lepton2_phi",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_displaced_lepton2_m{"truth_displaced_lepton2_m",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_displaced_vertex_mass{"truth_displaced_vertex_mass",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truth_three_lepton_mass{"truth_three_lepton_mass",m_tree, this};
        NtupleBranch <Int_t>                        passL1{"passL1",          m_tree, this};
        NtupleBranch <Int_t>                        passHLT{"passHLT",         m_tree, this};
        NtupleBranch <std::vector < std::string>>   passedTriggers{"passedTriggers",  m_tree, this};
        NtupleBranch <std::vector < std::string>>   disabledTriggers{"disabledTriggers",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_E{"jet_E",           m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_pt{"jet_pt",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_phi{"jet_phi",         m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_eta{"jet_eta",         m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_rapidity{"jet_rapidity",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_HECFrac{"jet_HECFrac",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_CentroidR{"jet_CentroidR",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_LowEtConstituentsFrac{"jet_LowEtConstituentsFrac",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_EMFrac{"jet_EMFrac",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_FracSamplingMax{"jet_FracSamplingMax",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_FracSamplingMaxIndex{"jet_FracSamplingMaxIndex",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_GhostMuonSegmentCount{"jet_GhostMuonSegmentCount",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_Width{"jet_Width",       m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_Jvt{"jet_Jvt",         m_tree, this};
        NtupleBranch <std::vector < Int_t>>         jet_fJvtPass_Loose{"jet_fJvtPass_Loose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>jet_fJvtEff_SF_Loose{"jet_fJvtEff_SF_Loose",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         jet_GhostTrackCount{"jet_GhostTrackCount",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_GhostTrackPt{"jet_GhostTrackPt",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>jet_GhostTrack_pt{"jet_GhostTrack_pt",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>jet_GhostTrack_qOverP{"jet_GhostTrack_qOverP",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>jet_GhostTrack_eta{"jet_GhostTrack_eta",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>jet_GhostTrack_phi{"jet_GhostTrack_phi",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>jet_GhostTrack_e{"jet_GhostTrack_e",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>jet_GhostTrack_d0{"jet_GhostTrack_d0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>jet_GhostTrack_z0{"jet_GhostTrack_z0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_GhostTrack_nPixelHits{"jet_GhostTrack_nPixelHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_GhostTrack_nSCTHits{"jet_GhostTrack_nSCTHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_GhostTrack_nTRTHits{"jet_GhostTrack_nTRTHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_GhostTrack_nPixelSharedHits{"jet_GhostTrack_nPixelSharedHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_GhostTrack_nPixelSplitHits{"jet_GhostTrack_nPixelSplitHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_m_GhostTrack_nInnermostPixelLayerHits{"jet_m_GhostTrack_nInnermostPixelLayerHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_m_GhostTrack_nInnermostPixelLayerSharedHits{"jet_m_GhostTrack_nInnermostPixelLayerSharedHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_m_GhostTrack_nInnermostPixelLayerSplitHits{"jet_m_GhostTrack_nInnermostPixelLayerSplitHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_m_GhostTrack_nNextToInnermostPixelLayerHits{"jet_m_GhostTrack_nNextToInnermostPixelLayerHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_m_GhostTrack_nNextToInnermostPixelLayerSharedHits{"jet_m_GhostTrack_nNextToInnermostPixelLayerSharedHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>jet_m_GhostTrack_nNextToInnermostPixelLayerSplitHits{"jet_m_GhostTrack_nNextToInnermostPixelLayerSplitHits",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1r{"jet_DL1r",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1r_pu{"jet_DL1r_pu",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1r_pc{"jet_DL1r_pc",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1r_pb{"jet_DL1r_pb",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1dv00{"jet_DL1dv00",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1dv00_pu{"jet_DL1dv00_pu",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1dv00_pc{"jet_DL1dv00_pc",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1dv00_pb{"jet_DL1dv00_pb",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1dv01{"jet_DL1dv01",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1dv01_pu{"jet_DL1dv01_pu",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1dv01_pc{"jet_DL1dv01_pc",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_DL1dv01_pb{"jet_DL1dv01_pb",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_GN1{"jet_GN1",         m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_GN1_pu{"jet_GN1_pu",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_GN1_pc{"jet_GN1_pc",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_GN1_pb{"jet_GN1_pb",      m_tree, this};
        NtupleBranch <std::vector < Int_t>>         jet_HadronConeExclTruthLabelID{"jet_HadronConeExclTruthLabelID",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         jet_HadronConeExclExtendedTruthLabelID{"jet_HadronConeExclExtendedTruthLabelID",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         jet_is_DL1dv01_FixedCutBEff_85{"jet_is_DL1dv01_FixedCutBEff_85",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>jet_SF_DL1dv01_FixedCutBEff_85{"jet_SF_DL1dv01_FixedCutBEff_85",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         jet_ConeTruthLabelID{"jet_ConeTruthLabelID",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         jet_TruthCount{"jet_TruthCount",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_TruthLabelDeltaR_B{"jet_TruthLabelDeltaR_B",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_TruthLabelDeltaR_C{"jet_TruthLabelDeltaR_C",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_TruthLabelDeltaR_T{"jet_TruthLabelDeltaR_T",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         jet_PartonTruthLabelID{"jet_PartonTruthLabelID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_GhostTruthAssociationFraction{"jet_GhostTruthAssociationFraction",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_truth_E{"jet_truth_E",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_truth_pt{"jet_truth_pt",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_truth_phi{"jet_truth_phi",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       jet_truth_eta{"jet_truth_eta",   m_tree, this};
        NtupleBranch <std::vector < Char_t>>        jet_passOR{"jet_passOR",      m_tree, this};
        NtupleBranch <Int_t>                        nmuon{"nmuon",           m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_m{"muon_m",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_pt{"muon_pt",         m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_phi{"muon_phi",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_eta{"muon_eta",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_charge{"muon_charge",     m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isTrigMatched{"muon_isTrigMatched",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>muon_isTrigMatchedToChain{"muon_isTrigMatchedToChain",m_tree, this};
        NtupleBranch <std::vector < std::vector<std::string>>>muon_listTrigChains{"muon_listTrigChains",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isIsolated_FCLoose{"muon_isIsolated_FCLoose",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isIsolated_FCTight{"muon_isIsolated_FCTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_RecoEff_SF_RecoLoose{"muon_RecoEff_SF_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoLoose{"muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoLoose{"muon_TrigMCEff_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoLoose{"muon_TrigEff_SF_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoLoose{"muon_TrigMCEff_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_RecoEff_SF_RecoMedium{"muon_RecoEff_SF_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoMedium{"muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoMedium{"muon_TrigMCEff_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoMedium{"muon_TrigEff_SF_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoMedium{"muon_TrigMCEff_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_RecoEff_SF_RecoTight{"muon_RecoEff_SF_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoTight{"muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoTight{"muon_TrigMCEff_HLT_mu20_iloose_L1MU15_OR_HLT_mu50_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoTight{"muon_TrigEff_SF_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoTight{"muon_TrigMCEff_HLT_mu26_ivarmedium_OR_HLT_mu50_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_IsoEff_SF_IsoFCLoose{"muon_IsoEff_SF_IsoFCLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_IsoEff_SF_IsoFCTight{"muon_IsoEff_SF_IsoFCTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TTVAEff_SF{"muon_TTVAEff_SF", m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isLoose{"muon_isLoose",    m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isMedium{"muon_isMedium",   m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isTight{"muon_isTight",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkd0{"muon_trkd0",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkd0sig{"muon_trkd0sig",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkz0{"muon_trkz0",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkz0sintheta{"muon_trkz0sintheta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkphi0{"muon_trkphi0",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trktheta{"muon_trktheta",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkcharge{"muon_trkcharge",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkqOverP{"muon_trkqOverP",  m_tree, this};
        NtupleBranch <std::vector < Char_t>>        muon_isLRT{"muon_isLRT",      m_tree, this};
        NtupleBranch <std::vector < Char_t>>        muon_passIDcuts{"muon_passIDcuts", m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_index{"muon_index",      m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_type{"muon_type",       m_tree, this};
        NtupleBranch <Int_t>                        nel{"nel",             m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_m{"el_m",            m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_pt{"el_pt",           m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_phi{"el_phi",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_eta{"el_eta",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_caloCluster_eta{"el_caloCluster_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_charge{"el_charge",       m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_isTrigMatched{"el_isTrigMatched",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>el_isTrigMatchedToChain{"el_isTrigMatchedToChain",m_tree, this};
        NtupleBranch <std::vector < std::vector<std::string>>>el_listTrigChains{"el_listTrigChains",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_isIsolated_Loose{"el_isIsolated_Loose",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_isIsolated_Gradient{"el_isIsolated_Gradient",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_isIsolated_Tight{"el_isIsolated_Tight",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_LHVeryLooseNoPix{"el_LHVeryLooseNoPix",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_LHLoose{"el_LHLoose",      m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_LHMedium{"el_LHMedium",     m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_LHTight{"el_LHTight",      m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_PIDEff_SF_Medium{"el_PIDEff_SF_Medium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_IsoEff_SF_Medium_isolLoose{"el_IsoEff_SF_Medium_isolLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolLoose{"el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolLoose{"el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_IsoEff_SF_Medium_isolGradient{"el_IsoEff_SF_Medium_isolGradient",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolGradient{"el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolGradient",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolGradient{"el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolGradient",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_IsoEff_SF_Medium_isolTight{"el_IsoEff_SF_Medium_isolTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolTight{"el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolTight{"el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_RecoEff_SF{"el_RecoEff_SF",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkd0{"el_trkd0",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkd0sig{"el_trkd0sig",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkz0{"el_trkz0",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkz0sintheta{"el_trkz0sintheta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkphi0{"el_trkphi0",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trktheta{"el_trktheta",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkcharge{"el_trkcharge",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkqOverP{"el_trkqOverP",    m_tree, this};
        NtupleBranch <std::vector < Char_t>>        el_isLRT{"el_isLRT",        m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_index{"el_index",        m_tree, this};
        NtupleBranch <Float_t>                      metFinalClus{"metFinalClus",    m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusPx{"metFinalClusPx",  m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusPy{"metFinalClusPy",  m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusSumEt{"metFinalClusSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusPhi{"metFinalClusPhi", m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusOverSqrtSumEt{"metFinalClusOverSqrtSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusOverSqrtHt{"metFinalClusOverSqrtHt",m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusSignificance{"metFinalClusSignificance",m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusSigDirectional{"metFinalClusSigDirectional",m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusRho{"metFinalClusRho", m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusVarL{"metFinalClusVarL",m_tree, this};
        NtupleBranch <Float_t>                      metFinalClusVarT{"metFinalClusVarT",m_tree, this};
        NtupleBranch <Float_t>                      metFinalTrk{"metFinalTrk",     m_tree, this};
        NtupleBranch <Float_t>                      metFinalTrkPx{"metFinalTrkPx",   m_tree, this};
        NtupleBranch <Float_t>                      metFinalTrkPy{"metFinalTrkPy",   m_tree, this};
        NtupleBranch <Float_t>                      metFinalTrkSumEt{"metFinalTrkSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metFinalTrkPhi{"metFinalTrkPhi",  m_tree, this};
        NtupleBranch <Float_t>                      metFinalTrkOverSqrtSumEt{"metFinalTrkOverSqrtSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metFinalTrkOverSqrtHt{"metFinalTrkOverSqrtHt",m_tree, this};
        NtupleBranch <Float_t>                      metFinalTrkSignificance{"metFinalTrkSignificance",m_tree, this};
        NtupleBranch <Float_t>                      metFinalTrkSigDirectional{"metFinalTrkSigDirectional",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClus{"metTrkFinalClus", m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusPx{"metTrkFinalClusPx",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusPy{"metTrkFinalClusPy",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusSumEt{"metTrkFinalClusSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusPhi{"metTrkFinalClusPhi",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusOverSqrtSumEt{"metTrkFinalClusOverSqrtSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusOverSqrtHt{"metTrkFinalClusOverSqrtHt",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusSignificance{"metTrkFinalClusSignificance",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusSigDirectional{"metTrkFinalClusSigDirectional",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusRho{"metTrkFinalClusRho",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusVarL{"metTrkFinalClusVarL",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalClusVarT{"metTrkFinalClusVarT",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalTrk{"metTrkFinalTrk",  m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalTrkPx{"metTrkFinalTrkPx",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalTrkPy{"metTrkFinalTrkPy",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalTrkSumEt{"metTrkFinalTrkSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalTrkPhi{"metTrkFinalTrkPhi",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalTrkOverSqrtSumEt{"metTrkFinalTrkOverSqrtSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalTrkOverSqrtHt{"metTrkFinalTrkOverSqrtHt",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalTrkSignificance{"metTrkFinalTrkSignificance",m_tree, this};
        NtupleBranch <Float_t>                      metTrkFinalTrkSigDirectional{"metTrkFinalTrkSigDirectional",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClus{"metNoMuFinalClus",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusPx{"metNoMuFinalClusPx",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusPy{"metNoMuFinalClusPy",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusSumEt{"metNoMuFinalClusSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusPhi{"metNoMuFinalClusPhi",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusOverSqrtSumEt{"metNoMuFinalClusOverSqrtSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusOverSqrtHt{"metNoMuFinalClusOverSqrtHt",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusSignificance{"metNoMuFinalClusSignificance",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusSigDirectional{"metNoMuFinalClusSigDirectional",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusRho{"metNoMuFinalClusRho",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusVarL{"metNoMuFinalClusVarL",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalClusVarT{"metNoMuFinalClusVarT",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalTrk{"metNoMuFinalTrk", m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalTrkPx{"metNoMuFinalTrkPx",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalTrkPy{"metNoMuFinalTrkPy",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalTrkSumEt{"metNoMuFinalTrkSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalTrkPhi{"metNoMuFinalTrkPhi",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalTrkOverSqrtSumEt{"metNoMuFinalTrkOverSqrtSumEt",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalTrkOverSqrtHt{"metNoMuFinalTrkOverSqrtHt",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalTrkSignificance{"metNoMuFinalTrkSignificance",m_tree, this};
        NtupleBranch <Float_t>                      metNoMuFinalTrkSigDirectional{"metNoMuFinalTrkSigDirectional",m_tree, this};
        NtupleBranch <Int_t>                        nsecVtx_LeptonsMod_LRTR3_1p0{"nsecVtx_LeptonsMod_LRTR3_1p0",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_x{"secVtx_LeptonsMod_LRTR3_1p0_x",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_y{"secVtx_LeptonsMod_LRTR3_1p0_y",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_z{"secVtx_LeptonsMod_LRTR3_1p0_z",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_ID{"secVtx_LeptonsMod_LRTR3_1p0_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_r{"secVtx_LeptonsMod_LRTR3_1p0_r",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_distFromPV{"secVtx_LeptonsMod_LRTR3_1p0_distFromPV",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_Lxy_err{"secVtx_LeptonsMod_LRTR3_1p0_Lxy_err",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_Lxy_sig{"secVtx_LeptonsMod_LRTR3_1p0_Lxy_sig",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_pt{"secVtx_LeptonsMod_LRTR3_1p0_pt",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_eta{"secVtx_LeptonsMod_LRTR3_1p0_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_phi{"secVtx_LeptonsMod_LRTR3_1p0_phi",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_mass{"secVtx_LeptonsMod_LRTR3_1p0_mass",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_mass_nonAssoc{"secVtx_LeptonsMod_LRTR3_1p0_mass_nonAssoc",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_covariance{"secVtx_LeptonsMod_LRTR3_1p0_covariance",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_chi2{"secVtx_LeptonsMod_LRTR3_1p0_chi2",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_direction{"secVtx_LeptonsMod_LRTR3_1p0_direction",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_charge{"secVtx_LeptonsMod_LRTR3_1p0_charge",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_H{"secVtx_LeptonsMod_LRTR3_1p0_H",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_Ht{"secVtx_LeptonsMod_LRTR3_1p0_Ht",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_minOpAng{"secVtx_LeptonsMod_LRTR3_1p0_minOpAng",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxOpAng{"secVtx_LeptonsMod_LRTR3_1p0_maxOpAng",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxDR_wrtSV{"secVtx_LeptonsMod_LRTR3_1p0_maxDR_wrtSV",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxDR{"secVtx_LeptonsMod_LRTR3_1p0_maxDR",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_mind0{"secVtx_LeptonsMod_LRTR3_1p0_mind0",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxd0{"secVtx_LeptonsMod_LRTR3_1p0_maxd0",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_region{"secVtx_LeptonsMod_LRTR3_1p0_region",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_minOneTrackRemovedMass{"secVtx_LeptonsMod_LRTR3_1p0_minOneTrackRemovedMass",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_twoTracksMass{"secVtx_LeptonsMod_LRTR3_1p0_twoTracksMass",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_twoTracksMassRest{"secVtx_LeptonsMod_LRTR3_1p0_twoTracksMassRest",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_twoTracksCharge{"secVtx_LeptonsMod_LRTR3_1p0_twoTracksCharge",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_ntrk{"secVtx_LeptonsMod_LRTR3_1p0_ntrk",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_ntrk_lrt{"secVtx_LeptonsMod_LRTR3_1p0_ntrk_lrt",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_ntrk_sel{"secVtx_LeptonsMod_LRTR3_1p0_ntrk_sel",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_ntrk_assoc{"secVtx_LeptonsMod_LRTR3_1p0_ntrk_assoc",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_pass_mat{"secVtx_LeptonsMod_LRTR3_1p0_pass_mat",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_ID{"secVtx_LeptonsMod_LRTR3_1p0_trk_ID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_qOverP{"secVtx_LeptonsMod_LRTR3_1p0_trk_qOverP",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_theta{"secVtx_LeptonsMod_LRTR3_1p0_trk_theta",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_vz{"secVtx_LeptonsMod_LRTR3_1p0_trk_vz",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_E{"secVtx_LeptonsMod_LRTR3_1p0_trk_E",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_M{"secVtx_LeptonsMod_LRTR3_1p0_trk_M",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_pt{"secVtx_LeptonsMod_LRTR3_1p0_trk_pt",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_px{"secVtx_LeptonsMod_LRTR3_1p0_trk_px",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_py{"secVtx_LeptonsMod_LRTR3_1p0_trk_py",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_pz{"secVtx_LeptonsMod_LRTR3_1p0_trk_pz",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_eta{"secVtx_LeptonsMod_LRTR3_1p0_trk_eta",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_phi{"secVtx_LeptonsMod_LRTR3_1p0_trk_phi",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_d0{"secVtx_LeptonsMod_LRTR3_1p0_trk_d0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_z0{"secVtx_LeptonsMod_LRTR3_1p0_trk_z0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_errd0{"secVtx_LeptonsMod_LRTR3_1p0_trk_errd0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_errz0{"secVtx_LeptonsMod_LRTR3_1p0_trk_errz0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_chi2{"secVtx_LeptonsMod_LRTR3_1p0_trk_chi2",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_nDoF{"secVtx_LeptonsMod_LRTR3_1p0_trk_nDoF",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_pt_wrtSV{"secVtx_LeptonsMod_LRTR3_1p0_trk_pt_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_eta_wrtSV{"secVtx_LeptonsMod_LRTR3_1p0_trk_eta_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_phi_wrtSV{"secVtx_LeptonsMod_LRTR3_1p0_trk_phi_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_d0_wrtSV{"secVtx_LeptonsMod_LRTR3_1p0_trk_d0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_z0_wrtSV{"secVtx_LeptonsMod_LRTR3_1p0_trk_z0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_errd0_wrtSV{"secVtx_LeptonsMod_LRTR3_1p0_trk_errd0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_errz0_wrtSV{"secVtx_LeptonsMod_LRTR3_1p0_trk_errz0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_chi2_toSV{"secVtx_LeptonsMod_LRTR3_1p0_trk_chi2_toSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_charge{"secVtx_LeptonsMod_LRTR3_1p0_trk_charge",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_isFinal{"secVtx_LeptonsMod_LRTR3_1p0_trk_isFinal",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_isSelected{"secVtx_LeptonsMod_LRTR3_1p0_trk_isSelected",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_isAssociated{"secVtx_LeptonsMod_LRTR3_1p0_trk_isAssociated",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_isLRT{"secVtx_LeptonsMod_LRTR3_1p0_trk_isLRT",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_electronIndex{"secVtx_LeptonsMod_LRTR3_1p0_trk_electronIndex",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_muonIndex{"secVtx_LeptonsMod_LRTR3_1p0_trk_muonIndex",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_nPixelHits{"secVtx_LeptonsMod_LRTR3_1p0_trk_nPixelHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_nSCTHits{"secVtx_LeptonsMod_LRTR3_1p0_trk_nSCTHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_nSCTHoles{"secVtx_LeptonsMod_LRTR3_1p0_trk_nSCTHoles",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_nTRTHits{"secVtx_LeptonsMod_LRTR3_1p0_trk_nTRTHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_nPixelBarrelLayers{"secVtx_LeptonsMod_LRTR3_1p0_trk_nPixelBarrelLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_nPixelEndCapLayers{"secVtx_LeptonsMod_LRTR3_1p0_trk_nPixelEndCapLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_nSCTBarrelLayers{"secVtx_LeptonsMod_LRTR3_1p0_trk_nSCTBarrelLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_nSCTEndCapLayers{"secVtx_LeptonsMod_LRTR3_1p0_trk_nSCTEndCapLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_hitPattern{"secVtx_LeptonsMod_LRTR3_1p0_trk_hitPattern",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_dEdx{"secVtx_LeptonsMod_LRTR3_1p0_trk_dEdx",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_radiusOfFirstHit{"secVtx_LeptonsMod_LRTR3_1p0_trk_radiusOfFirstHit",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_dTheta{"secVtx_LeptonsMod_LRTR3_1p0_trk_dTheta",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_truthProb{"secVtx_LeptonsMod_LRTR3_1p0_trk_truthProb",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_truthID{"secVtx_LeptonsMod_LRTR3_1p0_trk_truthID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_truthBarcode{"secVtx_LeptonsMod_LRTR3_1p0_trk_truthBarcode",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_trk_truthPdgId{"secVtx_LeptonsMod_LRTR3_1p0_trk_truthPdgId",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_closeTruth_distance{"secVtx_LeptonsMod_LRTR3_1p0_closeTruth_distance",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_closeTruth_ID{"secVtx_LeptonsMod_LRTR3_1p0_closeTruth_ID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_closeTruth_barcode{"secVtx_LeptonsMod_LRTR3_1p0_closeTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_closestTruth_distance{"secVtx_LeptonsMod_LRTR3_1p0_closestTruth_distance",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_closestTruth_ID{"secVtx_LeptonsMod_LRTR3_1p0_closestTruth_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_closestTruth_x{"secVtx_LeptonsMod_LRTR3_1p0_closestTruth_x",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_closestTruth_y{"secVtx_LeptonsMod_LRTR3_1p0_closestTruth_y",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_closestTruth_z{"secVtx_LeptonsMod_LRTR3_1p0_closestTruth_z",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_closestTruth_r{"secVtx_LeptonsMod_LRTR3_1p0_closestTruth_r",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_closestTruth_eta{"secVtx_LeptonsMod_LRTR3_1p0_closestTruth_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_closestTruth_phi{"secVtx_LeptonsMod_LRTR3_1p0_closestTruth_phi",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_closestTruth_barcode{"secVtx_LeptonsMod_LRTR3_1p0_closestTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_LeptonsMod_LRTR3_1p0_linkTruth_score{"secVtx_LeptonsMod_LRTR3_1p0_linkTruth_score",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_linkTruth_ID{"secVtx_LeptonsMod_LRTR3_1p0_linkTruth_ID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_LeptonsMod_LRTR3_1p0_linkTruth_barcode{"secVtx_LeptonsMod_LRTR3_1p0_linkTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_score{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_score",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_ID{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_x{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_x",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_y{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_y",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_z{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_z",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_r{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_r",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_eta{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_phi{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_phi",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_barcode{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_parent_pdgId{"secVtx_LeptonsMod_LRTR3_1p0_maxlinkTruth_parent_pdgId",m_tree, this};
};
#endif // NTAU__OUTTREE__H
