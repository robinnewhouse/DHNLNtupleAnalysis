#ifndef NTAU__DHNLTREE__H
#define NTAU__DHNLTREE__H

/// Autogenerated code by NtupleBranchMgr on Tue May  3 18:12:27 2022


#include "NtupleAnalysisUtils/NTAUTopLevelIncludes.h"
#include <vector>
#include "TTree.h"

class DHNLTree: public NtupleBranchMgr{
    public:
        DHNLTree(TTree* t): NtupleBranchMgr(t){
            if(t) getMissedBranches(t);
        }
     /// List of branch members
        NtupleBranch <Int_t>                        runNumber{"runNumber",       m_tree, this};
        NtupleBranch <Long64_t>                     eventNumber{"eventNumber",     m_tree, this};
        NtupleBranch <Int_t>                        lumiBlock{"lumiBlock",       m_tree, this};
        NtupleBranch <UInt_t>                       coreFlags{"coreFlags",       m_tree, this};
        NtupleBranch <Int_t>                        bcid{"bcid",            m_tree, this};
        NtupleBranch <Int_t>                        mcEventNumber{"mcEventNumber",   m_tree, this};
        NtupleBranch <Int_t>                        mcChannelNumber{"mcChannelNumber", m_tree, this};
        NtupleBranch <Float_t>                      mcEventWeight{"mcEventWeight",   m_tree, this};
        NtupleBranch <Int_t>                        NPV{"NPV",             m_tree, this};
        NtupleBranch <Float_t>                      actualInteractionsPerCrossing{"actualInteractionsPerCrossing",m_tree, this};
        NtupleBranch <Float_t>                      averageInteractionsPerCrossing{"averageInteractionsPerCrossing",m_tree, this};
        NtupleBranch <Float_t>                      weight_pileup{"weight_pileup",   m_tree, this};
        NtupleBranch <Float_t>                      correctedAverageMu{"correctedAverageMu",m_tree, this};
        NtupleBranch <Float_t>                      correctedAndScaledAverageMu{"correctedAndScaledAverageMu",m_tree, this};
        NtupleBranch <Float_t>                      correctedActualMu{"correctedActualMu",m_tree, this};
        NtupleBranch <Float_t>                      correctedAndScaledActualMu{"correctedAndScaledActualMu",m_tree, this};
        NtupleBranch <Float_t>                      weight_pileup_up{"weight_pileup_up",m_tree, this};
        NtupleBranch <Float_t>                      weight_pileup_down{"weight_pileup_down",m_tree, this};
        NtupleBranch <Int_t>                        rand_run_nr{"rand_run_nr",     m_tree, this};
        NtupleBranch <Int_t>                        rand_lumiblock_nr{"rand_lumiblock_nr",m_tree, this};
        NtupleBranch <Int_t>                        pdgId1{"pdgId1",          m_tree, this};
        NtupleBranch <Int_t>                        pdgId2{"pdgId2",          m_tree, this};
        NtupleBranch <Int_t>                        pdfId1{"pdfId1",          m_tree, this};
        NtupleBranch <Int_t>                        pdfId2{"pdfId2",          m_tree, this};
        NtupleBranch <Float_t>                      x1{"x1",              m_tree, this};
        NtupleBranch <Float_t>                      x2{"x2",              m_tree, this};
        NtupleBranch <Float_t>                      q{"q",               m_tree, this};
        NtupleBranch <Float_t>                      xf1{"xf1",             m_tree, this};
        NtupleBranch <Float_t>                      xf2{"xf2",             m_tree, this};
        NtupleBranch <Float_t>                      weight{"weight",          m_tree, this};
        NtupleBranch <Bool_t>                       passesHnlMuMuFilter{"passesHnlMuMuFilter",m_tree, this};
        NtupleBranch <Bool_t>                       passesHnlElMuFilter{"passesHnlElMuFilter",m_tree, this};
        NtupleBranch <Bool_t>                       passesHnlElElFilter{"passesHnlElElFilter",m_tree, this};
        NtupleBranch <Bool_t>                       passesHnlMuElFilter{"passesHnlMuElFilter",m_tree, this};
        NtupleBranch <Bool_t>                       passesVH4bFilter{"passesVH4bFilter",m_tree, this};
        NtupleBranch <Int_t>                        passL1{"passL1",          m_tree, this};
        NtupleBranch <Int_t>                        passHLT{"passHLT",         m_tree, this};
        NtupleBranch <std::vector < std::string>>   passedTriggers{"passedTriggers",  m_tree, this};
        NtupleBranch <std::vector < std::string>>   disabledTriggers{"disabledTriggers",m_tree, this};
        NtupleBranch <Int_t>                        nmuon{"nmuon",           m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_m{"muon_m",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_pt{"muon_pt",         m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_phi{"muon_phi",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_eta{"muon_eta",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_charge{"muon_charge",     m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isTrigMatched{"muon_isTrigMatched",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>muon_isTrigMatchedToChain{"muon_isTrigMatchedToChain",m_tree, this};
        NtupleBranch <std::vector < std::string>>   muon_listTrigChains{"muon_listTrigChains",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isIsolated_FCLoose{"muon_isIsolated_FCLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_RecoEff_SF_RecoTight{"muon_RecoEff_SF_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu26_ivarmedium_RecoTight{"muon_TrigEff_SF_HLT_mu26_ivarmedium_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu26_ivarmedium_RecoTight{"muon_TrigMCEff_HLT_mu26_ivarmedium_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_RecoTight{"muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu20_iloose_L1MU15_RecoTight{"muon_TrigMCEff_HLT_mu20_iloose_L1MU15_RecoTight",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_RecoEff_SF_RecoMedium{"muon_RecoEff_SF_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu26_ivarmedium_RecoMedium{"muon_TrigEff_SF_HLT_mu26_ivarmedium_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu26_ivarmedium_RecoMedium{"muon_TrigMCEff_HLT_mu26_ivarmedium_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_RecoMedium{"muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu20_iloose_L1MU15_RecoMedium{"muon_TrigMCEff_HLT_mu20_iloose_L1MU15_RecoMedium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_RecoEff_SF_RecoLoose{"muon_RecoEff_SF_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu26_ivarmedium_RecoLoose{"muon_TrigEff_SF_HLT_mu26_ivarmedium_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu26_ivarmedium_RecoLoose{"muon_TrigMCEff_HLT_mu26_ivarmedium_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_RecoLoose{"muon_TrigEff_SF_HLT_mu20_iloose_L1MU15_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TrigMCEff_HLT_mu20_iloose_L1MU15_RecoLoose{"muon_TrigMCEff_HLT_mu20_iloose_L1MU15_RecoLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_IsoEff_SF_IsoFCLoose{"muon_IsoEff_SF_IsoFCLoose",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>muon_TTVAEff_SF{"muon_TTVAEff_SF", m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isTight{"muon_isTight",    m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isMedium{"muon_isMedium",   m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_isLoose{"muon_isLoose",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkd0{"muon_trkd0",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkd0sig{"muon_trkd0sig",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkz0{"muon_trkz0",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkz0sintheta{"muon_trkz0sintheta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkphi0{"muon_trkphi0",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trktheta{"muon_trktheta",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkcharge{"muon_trkcharge",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_trkqOverP{"muon_trkqOverP",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_EnergyLoss{"muon_EnergyLoss", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_EnergyLossSigma{"muon_EnergyLossSigma",m_tree, this};
        NtupleBranch <std::vector < Char_t>>        muon_energyLossType{"muon_energyLossType",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_MeasEnergyLoss{"muon_MeasEnergyLoss",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_MeasEnergyLossSigma{"muon_MeasEnergyLossSigma",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_ParamEnergyLoss{"muon_ParamEnergyLoss",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_ParamEnergyLossSigmaMinus{"muon_ParamEnergyLossSigmaMinus",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       muon_ParamEnergyLossSigmaPlus{"muon_ParamEnergyLossSigmaPlus",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_index{"muon_index",      m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_type{"muon_type",       m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        muon_passesPromptCuts{"muon_passesPromptCuts",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        muon_passesDisplacedCuts{"muon_passesDisplacedCuts",m_tree, this};
        NtupleBranch <std::vector < Double_t>>      muon_px{"muon_px",         m_tree, this};
        NtupleBranch <std::vector < Double_t>>      muon_py{"muon_py",         m_tree, this};
        NtupleBranch <std::vector < Double_t>>      muon_pz{"muon_pz",         m_tree, this};
        NtupleBranch <std::vector < Double_t>>      muon_chi2{"muon_chi2",       m_tree, this};
        NtupleBranch <std::vector < Int_t>>         muon_msInnerMatchDOF{"muon_msInnerMatchDOF",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        muon_isLRT{"muon_isLRT",      m_tree, this};
        NtupleBranch <Int_t>                        nel{"nel",             m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_m{"el_m",            m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_pt{"el_pt",           m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_phi{"el_phi",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_eta{"el_eta",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_caloCluster_eta{"el_caloCluster_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_charge{"el_charge",       m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_isTrigMatched{"el_isTrigMatched",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>el_isTrigMatchedToChain{"el_isTrigMatchedToChain",m_tree, this};
        NtupleBranch <std::vector < std::string>>   el_listTrigChains{"el_listTrigChains",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_isIsolated_Gradient{"el_isIsolated_Gradient",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_LHLooseBL{"el_LHLooseBL",    m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_LHLoose{"el_LHLoose",      m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_LHMedium{"el_LHMedium",     m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_LHTight{"el_LHTight",      m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_PIDEff_SF_LooseBLayer{"el_PIDEff_SF_LooseBLayer",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_IsoEff_SF_LooseBLayer_isolGradient{"el_IsoEff_SF_LooseBLayer_isolGradient",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_LooseBLayer_isolGradient{"el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_LooseBLayer_isolGradient",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_LooseBLayer_isolGradient{"el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_LooseBLayer_isolGradient",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_PIDEff_SF_Medium{"el_PIDEff_SF_Medium",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_IsoEff_SF_Medium_isolGradient{"el_IsoEff_SF_Medium_isolGradient",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolGradient{"el_TrigEff_SF_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolGradient",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolGradient{"el_TrigMCEff_SINGLE_E_2015_e24_lhmedium_L1EM20VH_OR_e60_lhmedium_OR_e120_lhloose_2016_2018_e26_lhtight_nod0_ivarloose_OR_e60_lhmedium_nod0_OR_e140_lhloose_nod0_Medium_isolGradient",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>el_RecoEff_SF{"el_RecoEff_SF",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkd0{"el_trkd0",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkd0sig{"el_trkd0sig",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkz0{"el_trkz0",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkz0sintheta{"el_trkz0sintheta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkphi0{"el_trkphi0",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trktheta{"el_trktheta",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkcharge{"el_trkcharge",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       el_trkqOverP{"el_trkqOverP",    m_tree, this};
        NtupleBranch <std::vector < Int_t>>         el_index{"el_index",        m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        el_passesPromptCuts{"el_passesPromptCuts",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        el_passesDisplacedCuts{"el_passesDisplacedCuts",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        el_isLHVeryLoose{"el_isLHVeryLoose",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        el_isLHVeryLoose_mod1{"el_isLHVeryLoose_mod1",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        el_isLHVeryLoose_modSi{"el_isLHVeryLoose_modSi",m_tree, this};
        NtupleBranch <std::vector < Double_t>>      el_px{"el_px",           m_tree, this};
        NtupleBranch <std::vector < Double_t>>      el_py{"el_py",           m_tree, this};
        NtupleBranch <std::vector < Double_t>>      el_pz{"el_pz",           m_tree, this};
        NtupleBranch <std::vector < Float_t>>       vertex_x{"vertex_x",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       vertex_y{"vertex_y",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       vertex_z{"vertex_z",        m_tree, this};
        NtupleBranch <Int_t>                        nsecVtx_VSI_LeptonsMod{"nsecVtx_VSI_LeptonsMod",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_ID{"secVtx_VSI_LeptonsMod_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_x{"secVtx_VSI_LeptonsMod_x",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_y{"secVtx_VSI_LeptonsMod_y",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_z{"secVtx_VSI_LeptonsMod_z",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_r{"secVtx_VSI_LeptonsMod_r",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_distFromPV{"secVtx_VSI_LeptonsMod_distFromPV",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_Lxy_err{"secVtx_VSI_LeptonsMod_Lxy_err",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_Lxy_sig{"secVtx_VSI_LeptonsMod_Lxy_sig",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_pt{"secVtx_VSI_LeptonsMod_pt",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_eta{"secVtx_VSI_LeptonsMod_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_phi{"secVtx_VSI_LeptonsMod_phi",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_mass{"secVtx_VSI_LeptonsMod_mass",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_mass_nonAssoc{"secVtx_VSI_LeptonsMod_mass_nonAssoc",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_covariance{"secVtx_VSI_LeptonsMod_covariance",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_chi2{"secVtx_VSI_LeptonsMod_chi2",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_direction{"secVtx_VSI_LeptonsMod_direction",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_charge{"secVtx_VSI_LeptonsMod_charge",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_H{"secVtx_VSI_LeptonsMod_H",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_Ht{"secVtx_VSI_LeptonsMod_Ht",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_minOpAng{"secVtx_VSI_LeptonsMod_minOpAng",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxOpAng{"secVtx_VSI_LeptonsMod_maxOpAng",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxDR_wrtSV{"secVtx_VSI_LeptonsMod_maxDR_wrtSV",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxDR{"secVtx_VSI_LeptonsMod_maxDR",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_mind0{"secVtx_VSI_LeptonsMod_mind0",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxd0{"secVtx_VSI_LeptonsMod_maxd0",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_minOneTrackRemovedMass{"secVtx_VSI_LeptonsMod_minOneTrackRemovedMass",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_twoTracksMass{"secVtx_VSI_LeptonsMod_twoTracksMass",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_twoTracksMassRest{"secVtx_VSI_LeptonsMod_twoTracksMassRest",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_twoTracksCharge{"secVtx_VSI_LeptonsMod_twoTracksCharge",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_ntrk{"secVtx_VSI_LeptonsMod_ntrk",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_ntrk_lrt{"secVtx_VSI_LeptonsMod_ntrk_lrt",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_ntrk_sel{"secVtx_VSI_LeptonsMod_ntrk_sel",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_ntrk_assoc{"secVtx_VSI_LeptonsMod_ntrk_assoc",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_pass_mat{"secVtx_VSI_LeptonsMod_pass_mat",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_trk_ID{"secVtx_VSI_LeptonsMod_trk_ID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_qOverP{"secVtx_VSI_LeptonsMod_trk_qOverP",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_theta{"secVtx_VSI_LeptonsMod_trk_theta",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_vz{"secVtx_VSI_LeptonsMod_trk_vz",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_E{"secVtx_VSI_LeptonsMod_trk_E",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_M{"secVtx_VSI_LeptonsMod_trk_M",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_pt{"secVtx_VSI_LeptonsMod_trk_pt",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_px{"secVtx_VSI_LeptonsMod_trk_px",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_py{"secVtx_VSI_LeptonsMod_trk_py",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_pz{"secVtx_VSI_LeptonsMod_trk_pz",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_eta{"secVtx_VSI_LeptonsMod_trk_eta",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_phi{"secVtx_VSI_LeptonsMod_trk_phi",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_d0{"secVtx_VSI_LeptonsMod_trk_d0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_z0{"secVtx_VSI_LeptonsMod_trk_z0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_errd0{"secVtx_VSI_LeptonsMod_trk_errd0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_errz0{"secVtx_VSI_LeptonsMod_trk_errz0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_chi2{"secVtx_VSI_LeptonsMod_trk_chi2",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_nDoF{"secVtx_VSI_LeptonsMod_trk_nDoF",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_pt_wrtSV{"secVtx_VSI_LeptonsMod_trk_pt_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_eta_wrtSV{"secVtx_VSI_LeptonsMod_trk_eta_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_phi_wrtSV{"secVtx_VSI_LeptonsMod_trk_phi_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_d0_wrtSV{"secVtx_VSI_LeptonsMod_trk_d0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_z0_wrtSV{"secVtx_VSI_LeptonsMod_trk_z0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_errd0_wrtSV{"secVtx_VSI_LeptonsMod_trk_errd0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_errz0_wrtSV{"secVtx_VSI_LeptonsMod_trk_errz0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_chi2_toSV{"secVtx_VSI_LeptonsMod_trk_chi2_toSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_trk_charge{"secVtx_VSI_LeptonsMod_trk_charge",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_isFinal{"secVtx_VSI_LeptonsMod_trk_isFinal",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_isSelected{"secVtx_VSI_LeptonsMod_trk_isSelected",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_isAssociated{"secVtx_VSI_LeptonsMod_trk_isAssociated",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_isLRT{"secVtx_VSI_LeptonsMod_trk_isLRT",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_trk_electronIndex{"secVtx_VSI_LeptonsMod_trk_electronIndex",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_trk_muonIndex{"secVtx_VSI_LeptonsMod_trk_muonIndex",m_tree, this};
        NtupleBranch <std::vector < std::vector<Bool_t>>>secVtx_VSI_LeptonsMod_trk_mu_matched_to_el{"secVtx_VSI_LeptonsMod_trk_mu_matched_to_el",m_tree, this};
        NtupleBranch <std::vector < std::vector<Bool_t>>>secVtx_VSI_LeptonsMod_trk_isfromPV{"secVtx_VSI_LeptonsMod_trk_isfromPV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_nPixelHits{"secVtx_VSI_LeptonsMod_trk_nPixelHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_nSCTHits{"secVtx_VSI_LeptonsMod_trk_nSCTHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_nSCTHoles{"secVtx_VSI_LeptonsMod_trk_nSCTHoles",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_nTRTHits{"secVtx_VSI_LeptonsMod_trk_nTRTHits",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_nPixelBarrelLayers{"secVtx_VSI_LeptonsMod_trk_nPixelBarrelLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_nPixelEndCapLayers{"secVtx_VSI_LeptonsMod_trk_nPixelEndCapLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_nSCTBarrelLayers{"secVtx_VSI_LeptonsMod_trk_nSCTBarrelLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>secVtx_VSI_LeptonsMod_trk_nSCTEndCapLayers{"secVtx_VSI_LeptonsMod_trk_nSCTEndCapLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_trk_hitPattern{"secVtx_VSI_LeptonsMod_trk_hitPattern",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_dEdx{"secVtx_VSI_LeptonsMod_trk_dEdx",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_radiusOfFirstHit{"secVtx_VSI_LeptonsMod_trk_radiusOfFirstHit",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_dTheta{"secVtx_VSI_LeptonsMod_trk_dTheta",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_trk_truthProb{"secVtx_VSI_LeptonsMod_trk_truthProb",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_trk_truthID{"secVtx_VSI_LeptonsMod_trk_truthID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_trk_truthBarcode{"secVtx_VSI_LeptonsMod_trk_truthBarcode",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_trk_truthPdgId{"secVtx_VSI_LeptonsMod_trk_truthPdgId",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_closeTruth_distance{"secVtx_VSI_LeptonsMod_closeTruth_distance",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_closeTruth_ID{"secVtx_VSI_LeptonsMod_closeTruth_ID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_closeTruth_barcode{"secVtx_VSI_LeptonsMod_closeTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_closestTruth_distance{"secVtx_VSI_LeptonsMod_closestTruth_distance",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_closestTruth_ID{"secVtx_VSI_LeptonsMod_closestTruth_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_closestTruth_x{"secVtx_VSI_LeptonsMod_closestTruth_x",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_closestTruth_y{"secVtx_VSI_LeptonsMod_closestTruth_y",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_closestTruth_z{"secVtx_VSI_LeptonsMod_closestTruth_z",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_closestTruth_r{"secVtx_VSI_LeptonsMod_closestTruth_r",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_closestTruth_eta{"secVtx_VSI_LeptonsMod_closestTruth_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_closestTruth_phi{"secVtx_VSI_LeptonsMod_closestTruth_phi",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_closestTruth_barcode{"secVtx_VSI_LeptonsMod_closestTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>secVtx_VSI_LeptonsMod_linkTruth_score{"secVtx_VSI_LeptonsMod_linkTruth_score",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_linkTruth_ID{"secVtx_VSI_LeptonsMod_linkTruth_ID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>secVtx_VSI_LeptonsMod_linkTruth_barcode{"secVtx_VSI_LeptonsMod_linkTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxlinkTruth_score{"secVtx_VSI_LeptonsMod_maxlinkTruth_score",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_maxlinkTruth_ID{"secVtx_VSI_LeptonsMod_maxlinkTruth_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxlinkTruth_x{"secVtx_VSI_LeptonsMod_maxlinkTruth_x",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxlinkTruth_y{"secVtx_VSI_LeptonsMod_maxlinkTruth_y",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxlinkTruth_z{"secVtx_VSI_LeptonsMod_maxlinkTruth_z",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxlinkTruth_r{"secVtx_VSI_LeptonsMod_maxlinkTruth_r",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxlinkTruth_eta{"secVtx_VSI_LeptonsMod_maxlinkTruth_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       secVtx_VSI_LeptonsMod_maxlinkTruth_phi{"secVtx_VSI_LeptonsMod_maxlinkTruth_phi",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_maxlinkTruth_barcode{"secVtx_VSI_LeptonsMod_maxlinkTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_maxlinkTruth_parent_pdgId{"secVtx_VSI_LeptonsMod_maxlinkTruth_parent_pdgId",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_NumberofMuons{"secVtx_VSI_LeptonsMod_NumberofMuons",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         secVtx_VSI_LeptonsMod_NumberofElectron{"secVtx_VSI_LeptonsMod_NumberofElectron",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        secVtx_VSI_LeptonsMod_shuffled{"secVtx_VSI_LeptonsMod_shuffled",m_tree, this};
        NtupleBranch <Int_t>                        n{"n",               m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _ID{"_ID",             m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _x{"_x",              m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _y{"_y",              m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _z{"_z",              m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _r{"_r",              m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _distFromPV{"_distFromPV",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _Lxy_err{"_Lxy_err",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _Lxy_sig{"_Lxy_sig",        m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _pt{"_pt",             m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _eta{"_eta",            m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _phi{"_phi",            m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _mass{"_mass",           m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _mass_nonAssoc{"_mass_nonAssoc",  m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_covariance{"_covariance",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _chi2{"_chi2",           m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _direction{"_direction",      m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _charge{"_charge",         m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _H{"_H",              m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _Ht{"_Ht",             m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _minOpAng{"_minOpAng",       m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxOpAng{"_maxOpAng",       m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxDR_wrtSV{"_maxDR_wrtSV",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxDR{"_maxDR",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _mind0{"_mind0",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxd0{"_maxd0",          m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _minOneTrackRemovedMass{"_minOneTrackRemovedMass",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_twoTracksMass{"_twoTracksMass",  m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_twoTracksMassRest{"_twoTracksMassRest",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_twoTracksCharge{"_twoTracksCharge",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _ntrk{"_ntrk",           m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _ntrk_lrt{"_ntrk_lrt",       m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _ntrk_sel{"_ntrk_sel",       m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _ntrk_assoc{"_ntrk_assoc",     m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _pass_mat{"_pass_mat",       m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_trk_ID{"_trk_ID",         m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_qOverP{"_trk_qOverP",     m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_theta{"_trk_theta",      m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_vz{"_trk_vz",         m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_E{"_trk_E",          m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_M{"_trk_M",          m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_pt{"_trk_pt",         m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_px{"_trk_px",         m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_py{"_trk_py",         m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_pz{"_trk_pz",         m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_eta{"_trk_eta",        m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_phi{"_trk_phi",        m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_d0{"_trk_d0",         m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_z0{"_trk_z0",         m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_errd0{"_trk_errd0",      m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_errz0{"_trk_errz0",      m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_chi2{"_trk_chi2",       m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_nDoF{"_trk_nDoF",       m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_pt_wrtSV{"_trk_pt_wrtSV",   m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_eta_wrtSV{"_trk_eta_wrtSV",  m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_phi_wrtSV{"_trk_phi_wrtSV",  m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_d0_wrtSV{"_trk_d0_wrtSV",   m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_z0_wrtSV{"_trk_z0_wrtSV",   m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_errd0_wrtSV{"_trk_errd0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_errz0_wrtSV{"_trk_errz0_wrtSV",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_chi2_toSV{"_trk_chi2_toSV",  m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_trk_charge{"_trk_charge",     m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_isFinal{"_trk_isFinal",    m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_isSelected{"_trk_isSelected", m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_isAssociated{"_trk_isAssociated",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_isLRT{"_trk_isLRT",      m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_trk_electronIndex{"_trk_electronIndex",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_trk_muonIndex{"_trk_muonIndex",  m_tree, this};
        NtupleBranch <std::vector < std::vector<Bool_t>>>_trk_mu_matched_to_el{"_trk_mu_matched_to_el",m_tree, this};
        NtupleBranch <std::vector < std::vector<Bool_t>>>_trk_isfromPV{"_trk_isfromPV",   m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_nPixelHits{"_trk_nPixelHits", m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_nSCTHits{"_trk_nSCTHits",   m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_nSCTHoles{"_trk_nSCTHoles",  m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_nTRTHits{"_trk_nTRTHits",   m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_nPixelBarrelLayers{"_trk_nPixelBarrelLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_nPixelEndCapLayers{"_trk_nPixelEndCapLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_nSCTBarrelLayers{"_trk_nSCTBarrelLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>_trk_nSCTEndCapLayers{"_trk_nSCTEndCapLayers",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_trk_hitPattern{"_trk_hitPattern", m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_dEdx{"_trk_dEdx",       m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_radiusOfFirstHit{"_trk_radiusOfFirstHit",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_dTheta{"_trk_dTheta",     m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_trk_truthProb{"_trk_truthProb",  m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_trk_truthID{"_trk_truthID",    m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_trk_truthBarcode{"_trk_truthBarcode",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_trk_truthPdgId{"_trk_truthPdgId", m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_closeTruth_distance{"_closeTruth_distance",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_closeTruth_ID{"_closeTruth_ID",  m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_closeTruth_barcode{"_closeTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _closestTruth_distance{"_closestTruth_distance",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _closestTruth_ID{"_closestTruth_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _closestTruth_x{"_closestTruth_x", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _closestTruth_y{"_closestTruth_y", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _closestTruth_z{"_closestTruth_z", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _closestTruth_r{"_closestTruth_r", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _closestTruth_eta{"_closestTruth_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _closestTruth_phi{"_closestTruth_phi",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _closestTruth_barcode{"_closestTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>_linkTruth_score{"_linkTruth_score",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_linkTruth_ID{"_linkTruth_ID",   m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>_linkTruth_barcode{"_linkTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxlinkTruth_score{"_maxlinkTruth_score",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _maxlinkTruth_ID{"_maxlinkTruth_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxlinkTruth_x{"_maxlinkTruth_x", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxlinkTruth_y{"_maxlinkTruth_y", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxlinkTruth_z{"_maxlinkTruth_z", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxlinkTruth_r{"_maxlinkTruth_r", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxlinkTruth_eta{"_maxlinkTruth_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       _maxlinkTruth_phi{"_maxlinkTruth_phi",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _maxlinkTruth_barcode{"_maxlinkTruth_barcode",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _maxlinkTruth_parent_pdgId{"_maxlinkTruth_parent_pdgId",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _NumberofMuons{"_NumberofMuons",  m_tree, this};
        NtupleBranch <std::vector < Int_t>>         _NumberofElectron{"_NumberofElectron",m_tree, this};
        NtupleBranch <std::vector < Bool_t>>        _shuffled{"_shuffled",       m_tree, this};
        NtupleBranch <Int_t>                        nxAH_truth{"nxAH_truth",      m_tree, this};
        NtupleBranch <std::vector < Int_t>>         xAH_truth_pdgId{"xAH_truth_pdgId", m_tree, this};
        NtupleBranch <std::vector < Int_t>>         xAH_truth_status{"xAH_truth_status",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         xAH_truth_barcode{"xAH_truth_barcode",m_tree, this};
        NtupleBranch <Int_t>                        ntruthVtx{"ntruthVtx",       m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_ID{"truthVtx_ID",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_x{"truthVtx_x",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_y{"truthVtx_y",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_z{"truthVtx_z",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_r{"truthVtx_r",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_eta{"truthVtx_eta",    m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_phi{"truthVtx_phi",    m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_nOutP{"truthVtx_nOutP",  m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_barcode{"truthVtx_barcode",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_parent_ID{"truthVtx_parent_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_pt{"truthVtx_parent_pt",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_eta{"truthVtx_parent_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_phi{"truthVtx_parent_phi",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_E{"truthVtx_parent_E",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_M{"truthVtx_parent_M",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_charge{"truthVtx_parent_charge",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_parent_pdgId{"truthVtx_parent_pdgId",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_parent_status{"truthVtx_parent_status",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_parent_barcode{"truthVtx_parent_barcode",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_parent_prod_ID{"truthVtx_parent_prod_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_prod_x{"truthVtx_parent_prod_x",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_prod_y{"truthVtx_parent_prod_y",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_prod_z{"truthVtx_parent_prod_z",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_prod_r{"truthVtx_parent_prod_r",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_prod_eta{"truthVtx_parent_prod_eta",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_parent_prod_phi{"truthVtx_parent_prod_phi",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_parent_prod_barcode{"truthVtx_parent_prod_barcode",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>truthVtx_outP_ID{"truthVtx_outP_ID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_outP_pt{"truthVtx_outP_pt",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_outP_eta{"truthVtx_outP_eta",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_outP_phi{"truthVtx_outP_phi",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_outP_d0{"truthVtx_outP_d0",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_outP_E{"truthVtx_outP_E", m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_outP_M{"truthVtx_outP_M", m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_outP_charge{"truthVtx_outP_charge",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>truthVtx_outP_pdgId{"truthVtx_outP_pdgId",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>truthVtx_outP_status{"truthVtx_outP_status",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>truthVtx_outP_barcode{"truthVtx_outP_barcode",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>truthVtx_outP_isReco{"truthVtx_outP_isReco",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_outP_recoProb{"truthVtx_outP_recoProb",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>truthVtx_outP_recoID{"truthVtx_outP_recoID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>truthVtx_outP_recoIsSelected{"truthVtx_outP_recoIsSelected",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>truthVtx_outP_recoIsAssociated{"truthVtx_outP_recoIsAssociated",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>truthVtx_outP_isStable{"truthVtx_outP_isStable",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>truthVtx_outP_isInteracting{"truthVtx_outP_isInteracting",m_tree, this};
        NtupleBranch <std::vector < std::vector<Char_t>>>truthVtx_outP_isReconstructible{"truthVtx_outP_isReconstructible",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_nReconstructableDaughters{"truthVtx_nReconstructableDaughters",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_nReconstructedDaughters_total{"truthVtx_nReconstructedDaughters_total",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_nReconstructedDaughters_selected{"truthVtx_nReconstructedDaughters_selected",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>truthVtx_closeRecoVtx_ID{"truthVtx_closeRecoVtx_ID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_closeRecoVtx_distance{"truthVtx_closeRecoVtx_distance",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_closestRecoVtx_ID{"truthVtx_closestRecoVtx_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_closestRecoVtx_distance{"truthVtx_closestRecoVtx_distance",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>truthVtx_linkedRecoVtx_ID{"truthVtx_linkedRecoVtx_ID",m_tree, this};
        NtupleBranch <std::vector < std::vector<Float_t>>>truthVtx_linkedRecoVtx_score{"truthVtx_linkedRecoVtx_score",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         truthVtx_maxlinkedRecoVtx_ID{"truthVtx_maxlinkedRecoVtx_ID",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       truthVtx_maxlinkedRecoVtx_score{"truthVtx_maxlinkedRecoVtx_score",m_tree, this};
};
#endif // NTAU__DHNLTREE__H
