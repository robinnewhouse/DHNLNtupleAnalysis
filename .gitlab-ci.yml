
stages:
  - package
  - run
  - test

build_image:
  stage: package
  image:
    name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context "${CI_PROJECT_DIR}"
                       --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
                       --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"


# teplate for tests
.run_test:
  stage: run
  image: gitlab-registry.cern.ch/sft/docker:lcg-cc7
  before_script:
    - printf $SERVICE_PASS | kinit $CERN_USER@CERN.CH
  artifacts:
    paths:
      - test/output
    expire_in: 1 week

# python 3 tests
run_py3:
  extends: 
    - .run_test
  script:
    - source setup.sh
    - python --version
    - cd test
    - mkdir -p output
    # run tests
    # - bash test_mc_uuu.sh
    # - bash test_mc_uue.sh
    # - bash test_mc_eeu.sh
    # - bash test_mc_eee.sh
    # - bash test_data.sh

# # python 2 tests
# run_py2:
#   extends: 
#     - .run_test
#   script:
#     - source setup_py2.sh
#     - python --version
#     - cd test
#     - mkdir -p output
#     # run tests
#     - bash test_mc_uuu.sh
#     - bash test_mc_uue.sh
#     - bash test_mc_eeu.sh
#     - bash test_mc_eee.sh
#     - bash test_data.sh

